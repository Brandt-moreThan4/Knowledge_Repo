demo()
library(readr)
dataset <- read_csv(NULL)
View(dataset)
5+5
8+8
16*9
[1,2]
"lolol"
"lolol" + "haha"
help.start()
lol = 5
lol
lol <- 7
lol + lol
print(x*x)
for (x in 1:10) {
print(x)
}
for (x in 1:100) {
print(x)
}
print(x * x)
print()
print(x)
for (x in 1:10) {
print(x)
}
for (x in 1:100) {
print(x)
}
print(x + x)
class("lol")
print(y)
y <- x + 4
print("lol")
print(x)
print(y)
y <- x * x
print(y)
for (x in 1:10) {
y <- x * x
print(y)
}
y = 2
for (x in 1:10) {
y <- x * x
print(y)
}
y = 2
for (x in 1:10) {
y <- x * x
print(y)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
for (x in 1:10) {
y <- x * x
print(y)
}
x= 5
y = 2
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
5
lol = 5
lol
lol = 7
lol
library(readxl)
Galton_father_son_height_data <- read_excel("C:/Users/User/OneDrive/Desktop/stats_boot/Galton father-son height data.xlsx")
View(Galton_father_son_height_data)
help.start()
x = 5
x
exit()
exit
source('~/.active-rstudio-document', echo=TRUE)
x
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
iris_data <- read_excel("C:/Users/User/OneDrive/Desktop/data_explore/data/iris_data.xlsx")
View(iris_data)
iris_data
summarize(iris_data)
summary(iris_data)
iris_data$sepal_length
mean(iris_data$sepal_length)
mean(1,4)
mean(1,4,5)
?mean
mean(c(2,3,4,5))
iris
iris$Sepal.Length
iris_data = iris
view(iris)
View(iris_data)
View(iris_data)
view(iris)
install.packages("tinytex")
tinytex::install_tinytex()
getwd()
setwd("C:/Users/User/OneDrive/Desktop/Unsupervised/Notes")
source("C:/Users/User/OneDrive/Desktop/Unsupervised/Notes/PCA/R for basic PCA.R", echo=TRUE)
prcomp?
5
lm?
5
sum(5,5)
sum?
5
?sum
?prcomp
library(readxl)
AustinApartmentRent <- read_excel("PCA/AustinApartmentRent.xls")
View(AustinApartmentRent)
View(AustinApartmentRent)
fit <- prcomp(AustinApartmentRent[2:9], scale=TRUE)
fit
View(AustinApartmentRent)
AustinApartmentRent[2:9]
fit <- prcomp(AustinApartmentRent, scale=TRUE)
fit
names(fit) # names of vars in object fit
summary(fit) # print proportion of variance accounted for
fit$sdev^2 # variance explained
plot(fit,type="lines") # scree plot
fit$rotation # eigenvectors of corr matrix
biplot(fit, scale = 0) # biplot PC1 v PC2, scale=0 makes arrows scaled to rep loadings
source("C:/Users/User/OneDrive/Desktop/Unsupervised/Notes/PCA/R for basic PCA.R", echo=TRUE)
source("C:/Users/User/OneDrive/Desktop/Unsupervised/Notes/PCA/R for basic PCA.R", echo=TRUE)
curve(X^ + 2)
curve(x^2 + 2)
curve(x^2 +y 2)
curve(x^2 +y +2)
setwd("C:/Users/User/OneDrive/Desktop/Code/Knowledge_Repo/Tutorials/R_Reference")
# Load one of R's built-in data sets about cars
data(mtcars)
# Fit a straight line for mpg vs hp and plot the result.
mpg_model = lm(mpg ~ hp, data=mtcars)
plot(mtcars$hp, mtcars$mpg)
abline(mpg_model)
coef(mpg_model)
print(coef(mpg_model)) # Print the coefficients to command line
# knitr::opts_chunk$set(echo = FALSE,message = FALSE, warning = FALSE)
##
# Load one of R's built-in data sets about cars
data(mtcars)
# Fit a straight line for mpg vs hp and plot the result.
mpg_model = lm(mpg ~ hp, data=mtcars) # Fit Linera Model
plot(mtcars$hp, mtcars$mpg) # Plot Linear Model
abline(mpg_model) # Draw the best fit line
print(coef(mpg_model)) # Print the coefficients to command line
## R Markdown
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
setwd("C:/Users/User/OneDrive/Desktop/Code/Knowledge_Repo/Tutorials/R_Reference")
price_demand_data <- read.csv("C:/Users/User/OneDrive/Desktop/Code/Knowledge_Repo/Tutorials/R_Reference/data/price_demand_data.csv")
View(price_demand_data)
library(readr)
price_demand_data <- read_csv("data/price_demand_data.csv")
View(price_demand_data)
# Import libraries
library(tidyverse)
library(readr)
library(readr)
demand_data <- read_csv("data/price_demand_data.csv")
View(price_demand_data)
head(demand_data)
library(readr)
demand_data <- read_csv("data/price_demand_data.csv")
# View(demand_data)
head(demand_data)
library(readr)
demand_data <- read_csv("data/price_demand_data.csv")
# View(demand_data)
head(demand_data)
str(demand_data)
head(demand_data)
str(demand_data) # Basic datafram
tv_data <- read_csv("data/tvshows.csv")
head(tv_data)
str(tv_data) # Basic dataframe info
xtabs(~Genre + Duration, data=tvshows)
xtabs(~Genre + Duration, data=tv_df)
xtabs(~Genre + Duration, data=tv_df)
tv_df <- read_csv("data/tvshows.csv")
xtabs(~Genre + Duration, data=tv_df)
head(tv_df) # View the first 6 rows
str(tv_df) # Basic dataframe info
head(tv_df) # View the first 6 rows
xtabs(~Genre + Duration, data=tv_df) # Cross tabulate the data
# Get the Average audience size  by genre
tv_df
# Get the Average audience size  by genre
tv_df %>% group_by(Genre) %>% summarise(mean_GRP = mean(GRP))
library(ggplot)
library(ggplot2)
ggplot(tv_df) + geom_point(aes(x=GRP),y=PE,color=Genre)
ggplot(tv_df) + geom_point(aes(x=GRP,y=PE,color=Genre)
ggplot(tv_df) + geom_point(aes(x=GRP,y=PE,color=Genre))
ggplot(tv_df)# + geom_point(aes(x=GRP,y=PE,color=Genre))
ggplot(tv_df) + geom_point(aes(x=GRP,y=PE))
ggplot(tv_df) + geom_point(aes(x=GRP,y=PE,color=Gennre))
ggplot(tv_df) + geom_point(aes(x=GRP,y=PE,color=Genre))
ggplot(tv_df) + geom_point(aes(x=GRP,y=PE,color=Genre))
tvshows = read.csv('data/tvshows.csv', header=TRUE)
# library(readr)
# tv_df <- read_csv("data/tvshows.csv")
tv_df = read.csv('data/tvshows.csv', header=TRUE)
xtabs(~Genre + Duration, data=tv_df) # Cross tabulate the data
# Get the Average audience size  by genre
tv_df %>% group_by(Genre) %>% summarise(mean_GRP = mean(GRP))
# Plot engagement by genre
ggplot(tv_df) + geom_point(aes(x=GRP,y=PE,color=Genre))
acl_df = read.csv('data/aclfest.csv', header=TRUE)
str(acl_df)
acl_df = read.csv('data/aclfest.csv', header=TRUE)
str(acl_df)
head(acl_df)
xtabs(~lollapalooza, data=acl_df)
palooza_counts = xtabs(~lollapalooza, data=acl_df)
palooza_counts
print(palooza_counts)
acl_df = read.csv('data/aclfest.csv', header=TRUE)
str(acl_df)
head(acl_df)
palooza_counts = xtabs(~lollapalooza, data=acl_df)
print(palooza_counts)
palooza_proportions = prop.table(palooza_counts)
palooza_proportions
palooza_proportions
# Same as above but with piping
xtabs(~lollapalooza,data=acl_df) %>% prop.table
# Same as above but with piping
xtabs(~lollapalooza,data=acl_df) %>% prop.table %>% round(3)
xtabs(~acl + lollapalooza, data=acl_df)
xtabs(~acl + lollapalooza, data=acl_df) %>% prop.table
xtabs(~acl + lollapalooza, data=acl_df) %>% prop.table %>%  round(3)
head(acl_df)
xtabs(~bonnaroo + coachella, data=aclfest) %>%
prop.table %>%
addmargins
xtabs(~bonnaroo + coachella, data=acl_df) %>%
prop.table %>%
addmargins
xtabs(~acl + lollapalooza, data=acl_df) %>% prop.table %>%  round(3)
xtabs(~bonnaroo + coachella, data=acl_df) %>%
prop.table %>%
addmargins
# library(readr)
# tv_df <- read_csv("data/tvshows.csv")
tv_df = read.csv('data/tvshows.csv', header=TRUE)
ggplot(tvshows) +
geom_point(aes(x=GRP, y=PE, shape=Genre))
# Scatter Plot with shape as a facet
ggplot(tvshows) +
geom_point(aes(x=GRP, y=PE, size=Genre))
head(tvshows)
# Facet plot by different genre
ggplot(tvshows) +
geom_point(aes(x=GRP, y=PE)) +
facet_wrap(~Genre)
# head(tvshows)
power_christmas2015 = read.csv('data/power_christmas2015.csv', header=TRUE)
head(power_christmas2015)
# Line plot
ggplot(power_christmas2015) +
geom_line(aes(x=hour, y=ERCOT))
ad.csv('data/rapidcity.csv', header=TRUE)
# head(power_christmas2015)
rapidcity = read.csv('data/rapidcity.csv', header=TRUE)
head(rapidcity)
# Historgram
ggplot(rapidcity) +
geom_histogram(aes(x=Temp))
# Historgram
ggplot(rapidcity) +
geom_histogram(aes(x=Temp),bins=30)
# Histogram faceted by month
ggplot(rapidcity) +
geom_histogram(aes(x=Temp), binwidth=3) +
facet_wrap(~Month)
# Histogram with probabilities
ggplot(rapidcity) +
geom_histogram(aes(x=Temp, y=..density..), binwidth=3)
kroger = read.csv('data/kroger.csv', header=TRUE)
head(kroger)
# Boxplots, grouped by city
ggplot(kroger) +
geom_boxplot(aes(x = city, y = vol))
plot()
ggplot(kroger) +
geom_boxplot(aes(x = city, y = vol))
ggplot(kroger) +
geom_point(aes(x = quantity, y = price))
ggplot(kroger) +
geom_point(aes(x = vol, y = price))
ggplot(kroger) +
geom_point(aes(x = price, y = vol))
ggplot(kroger) +
geom_point(aes(x = vol, y = price))
car_class_summaries = read.csv('data/car_class_summaries.csv', header=TRUE)
head(car_class_summaries)
# Bar plot of summary stats
ggplot(car_class_summaries) +
geom_col(aes(x=class, y=average_cty))
data(mpg)
mpg
data(mpg) # read in the dataset
ggplot(car_class_summaries) +
geom_col(aes(x=class, y=n))
ggplot(mpg) +
geom_bar(aes(x=class))
# Adding better labels to plots
ggplot(kroger) +
geom_boxplot(aes(x = city, y = vol)) +
labs(x="Location of store",
y="Weekly sales volume (packages sold)",
title="Weekly cheese sales at 11 U.S. Kroger stores")
ggplot(kroger) +
geom_boxplot(aes(x = city, y = vol)) +
labs(x="Location of Kroger store",
y="Weekly sales volume (packages sold)",
title="Weekly cheese sales at 11 U.S. Kroger stores") +
theme(axis.text = element_text(size = 8))
